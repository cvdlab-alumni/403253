
import logging
logging.basicConfig()
from pyplasm import *

GRID = COMP([INSR(PROD),AA(QUOTE)])

def Pillar0 ():
    pil = CYLINDER([1.25, 26])(36)
    #il pilastro viene spostato, inizialmente centrato nell'origine
    return T([1,2])([1.25,1.25]) (pil)

roundPillarsLine0A = STRUCT(NN(5)([Pillar0(),T([1])([27.5])]))
roundPillarsLine0B = STRUCT([T([2])([50])(Pillar0()),T([1,2])([110,50])(Pillar0())])
squarePillarsLine0 = GRID([[-13.75,2.5,-11.25,2.5,-25,2.5,-25,2.5], [-50,2.5],[-1,25]])

pillars0 = STRUCT([roundPillarsLine0A,roundPillarsLine0B,squarePillarsLine0])

def Pillar1 ():
    pil = CYLINDER([1.25, 24])(36)
    #il pilastro viene spostato, inizialmente centrato nell'origine
    return T([1,2])([1.25,1.25]) (pil)

squarePillarsLine1A = GRID([[2.5,-25,2.5],[2.5],[-27,49]])
squarePillarsLine1B = GRID([[-2.5,-25,-2.5,-25,2.5,-25,2.5,-25,2.5],[2.5],[-27,24]])
squarePillarsLine1C = GRID([[2.5,-25,2.5],[-50,2.5],[-27,49]])
squarePillarsLine1D = GRID([[-2.5,-25,-2.5,-25,2.5,-25,-2.5,-25,2.5],[-50,2.5],[-27,24]])
roundPillar1FloorTranslated = T([1,2,3])([2.5+25+2.5+25+2.5+25,50,27])(Pillar1())

pillars1 = STRUCT([squarePillarsLine1A,squarePillarsLine1B,squarePillarsLine1C,squarePillarsLine1D,roundPillar1FloorTranslated])

squarePillarsLine2A = GRID([[-55,2.5,-52.5,2.5], [2.5,-62.5], [-52,24,-26]]) 
squarePillarsLine2B = GRID([[-2.5,-25,-2.5,-25,2.5,-25,2.5,-25,2.5], [-50,2.5,-12.5], [-52,24,-26]])

pillars2 = STRUCT([squarePillarsLine2A,squarePillarsLine2B])

smallSquarePillars3A = GRID([[1.25], [1.25], [-1,-25,-1,-24,-1,-24,-1,23]])
squarePillarsLine3A = GRID([[-2.5,-25,-2.5,-25,2.5,-25,-2.5,-25,2.5], [2.5], [-1,-25,-1,-24,-1,-24,-1,23]])
smallSquarePillars3B = GRID([[1.25,-1.25,-25,1.25], [-1.25,-50,1.25], [-1,-25,-1,-24,-1,-24,-1,23]])
squarePillarsLine3B = GRID([[-2.5,-25,-2.5,-25,2.5,-25,2.5,-25,2.5], [-50,2.5], [-1,-25,-1,-24,-1,-24,-1,23]])

pillars3 = STRUCT([smallSquarePillars3A,squarePillarsLine3A,smallSquarePillars3B,squarePillarsLine3B])

building = STRUCT([pillars0,pillars1,pillars2,pillars3])


#2 esercizio

def semiCircle(r):
    def semiCircle(p):
        alpha = p[0]
        b = p[1]
        a = [b*COS(alpha), b*SIN(alpha)] 
        return a
    dom = PROD([INTERVALS(PI)(36), INTERVALS(r)(1)])
    cerchioO = MAP(semiCircle)(dom)
    semiPlan = PROD([cerchioO, Q(1)])
    return semiPlan

semiPlan0a = GRID([[-13.75, 71.25], [-22, 43], [1]])
semiPlan0b = GRID([[-85, 12.5, -15], [-42, 23], [1]])
semiPlan0c = GRID([[-13.75, 12.5],[-18, 4],[1]])
semiPlan0d = T([1,2])([97.5, 53.5])(R([1,2])(-PI/2)(semiCircle(11.5)))
semiPlan0e = T([1,2])([20, 18])(R([1,2])(-PI)(semiCircle(6.25)))
floor0 = STRUCT([semiPlan0a,semiPlan0b,semiPlan0c,semiPlan0d,semiPlan0e])

buildingBase = COLOR(GREEN)(T([3])([-1])(GRID([[112,5],[65],[1]])))
westWall0 = GRID([[-13.75, 2.5, -96.25], [-18, 32, -15], [26]])
nordWall0a = GRID([[97.5],[-62.5, 2.5], [26]])
nordWall0b = GRID([[-13.75, 2.5], [-61.5, 1], [26]])
wall0 = STRUCT([buildingBase,westWall0,nordWall0a,nordWall0b])
building = STRUCT([pillars0,pillars1,pillars2,pillars3,floor0,buildingBase])


hpartition01 = GRID([[2.5,8.57],[50,3.5,9,2.5],[-1,-25,1]])
hpartition02 = GRID([[-2.5,-8.57,40.22],[50,3.50,-9,2.5],[-1,-25,1]])
hpartition04 = GRID([[-2.5,-8.57,-31.65,-4.58,3.99],[-50,-3.5,9],[-1,-25,1]])
hpartition05 = GRID([[-2.5,-8.57,-31.65,-8.57,8.57],[65],[-1,-25,1]])
hpartition06 = GRID([[-2.5,-8.57,-31.65,-8.57,-8.57,52.64],[65],[-1,-25,1]])
floor1 = STRUCT([hpartition01,hpartition02,hpartition04,hpartition05,hpartition06])

     
hpartition21 = GRID([[2.5,5.71],[65],[-1,-25,-1,-24,1]])
hpartition22 = GRID([[-2.5,-5.71,37.14],[2.5,-51,-9,2.5],[-1,-25,-1,-24,1]])
hpartition23 = GRID([[-2.5,-5.71,-37.14,13.57],[2.5],[-1,-25,-1,-24,1]])
verts = [[58.92,0],[45.35,51],[45.35,65],[58.92,65]]
cells = [[1,2,3,4]]
hpartition24 = MKPOL([verts,cells,None])
hpartition24_3D = T([3])([1+25+1+24])(PROD([hpartition24,Q(1)]))
hpartition25 = GRID([[-2.5,-5.71,-37.14,-13.57,53.53],[65],[-1,-25,-1,-24,1]])
floor2 = STRUCT([hpartition21,hpartition22,hpartition23,hpartition24_3D,hpartition25])


hpartition31 = GRID([[2.5],[65],[-1,-25,-1,-24,-1,-24,1]])
hpartition32 = GRID([[2.5,25,2.5,25],[2.5,61.25,1.25],[-1,-25,-1,-24,-1,-24,1]])
hpartition33 = GRID([[-2.5,-25,-2.5,-25,2.5],[65],[-1,-25,-1,-24,-1,-24,1]])
hpartition34 = GRID([[-2.5,-25,-2.5,-25,2.5,34.58],[54.75,-9,1.25],[-1,-25,-1,-24,-1,-24,1]])
hpartition35 = GRID([[-2.5,-25,-2.5,-25,2.5,-34.58,20.42],[65],[-1,-25,-1,-24,-1,-24,1]])
floor3 = STRUCT([hpartition31,hpartition32,hpartition33,hpartition34,hpartition35])


hpartition41 = GRID([[2.5],[65],[-1,-25,-1,-24,-1,-24,-1,-23,2]])
hpartition42 = GRID([[2.5,25,2.5,25],[2.5,-51.18,11.32],[-1,-25,-1,-24,-1,-24,-1,-23,2]])
hpartition43 = GRID([[-2.5,-25,-2.5,-25,2.5,25,2.5,25,2.5],[65],[-1,-25,-1,-24,-1,-24,-1,-23,2]])
floor4 = STRUCT([hpartition41,hpartition42,hpartition43])

VIEW(STRUCT([building,floor0,floor1,floor2,floor3,floor4]))


# 3 Esercizio

def pieceOfCircle(alpha, r , R):
    dom= PROD([INTERVALS(alpha)(36), T(1)(r)(INTERVALS(R-r)(1))])
    def mapping(v):
        a=v[0]
        r=v[1]
        return [r*COS(a), r*SIN(a)]
    model=MAP(mapping)(dom)
    return model

roundNorth1floor = T([1,2,3])([97.5, 53.5, 1])(R([1,2])(-PI/2)(PROD([pieceOfCircle(PI, 9, 11.5), Q(25)])))
north1floor0 = T([3])([1])(GRID([[-82.5, 2.5], [-22, 11.5], [25]]))
north1floor0a = T([1,2,3])([82.5, 33.5, 23])(CUBOID([2.5,8.5,3]))
north1floor0b = T([3])([1])(GRID([[-23.75, 2.5],[-18, 4],[25]]))

north1 = GRID([[-110, 2.5],[-2.5, 50],[-27, 10, -10, 4]])
north1a = GRID([[-110, 2.5], [-52.5, 7, -3, 2.5], [-27, 24]])
north1b = T([1,2,3])([110, 59.5,50])(CUBOID([2.5,3,1]))
north1c = T([1,2,3])([110, 59.5,27])(CUBOID([2.5,3,1]))

north2 = GRID([[-110, 2.5],[-2.5, 50],[-52, 7, -10, 7]])
north2a = GRID([[-110, 2.5], [-52.5, 7, -3, 2.5], [-52, 24]])
north2b = T([1,2,3])([110, 59.5,74.5])(CUBOID([2.5,3,1.5]))
north2c = T([1,2,3])([110, 59.5,52])(CUBOID([2.5,3,1.5]))

north3 = GRID([[-110, 2.5],[-2.5, 50],[-77, 5, -10, 8]])
north3a = GRID([[-110, 2.5], [-52.5, 7, -3, 2.5], [-77, 24]])
north3b = T([1,2,3])([110, 59.5,77])(CUBOID([2.5,3,2]))
north3c = T([1,2,3])([110, 59.5,99])(CUBOID([2.5,3,2]))

north = STRUCT([roundNorth1floor,north1floor0,north1floor0a,north1floor0b,north1,north1a,north1b,north1c,north2,north2a,north2b,north2c,north3,north3a,north3b,north3c])

east1floor = T([1,2,3])([20, 18, 1])(R([1,2])(-PI)(PROD([pieceOfCircle(PI, 3.75, 6.25), Q(25)])))
east1floora = T([3])([1])(GRID([[-23.75, 32.25], [-22, 2.5], [25]]))
east1floorb = T([3])([1])(GRID([[-56, 26.5], [-22, 2.5], [14, -10, 1]]))
east1floorc = T([3])([1])(GRID([[-82.5, 15], [-42, 2.5],[25]]))

east1a = GRID([[-2.5, 25], [2.5], [-27, 24]])
east1b = GRID([[-30, 25], [2.5], [-27, 24]])
east1c = GRID([[-85, 25], [2.5], [-27, 24]])
east1d = GRID([[-56, 26.5], [2.5], [-27, 10, -10, 4]])
east1 = STRUCT([east1a,east1b,east1c,east1d])

east2a = GRID([[-2.5, 25], [2.5], [-52, 24]])
east2b = GRID([[-30, 25], [2.5], [-52, 24]])
east2c = GRID([[-82.5, 27.5], [2.5], [-52, 24]])
east2d = GRID([[-56, 26.5], [2.5], [-52, 10, -10, 4]])
east2 = STRUCT([east2a,east2b,east2c,east2d])

east3a = GRID([[55], [2.5], [-77, 7.14, -15.86]])
east3b = GRID([[-82.5, 27.5], [2.5], [-77, 23]])
east3c = GRID([[-56, 26.5], [2.5], [-77, 7.14, -10, 5.86]])
east3 = STRUCT([east3a,east3b,east3c])
east = STRUCT([east1floor,east1floora,east1floorb,east1floorc,east1,east2,east3])

#South

south01 = GRID([[2.5],[-50,-2.5,-10,2.5],[1,25]])
south02 = GRID([[-13.75,2.5],[-2.5,-18.86,28.64],[-1,14.28,-9.47,1.25]])
south03 = GRID([[-13.75,2.5],[-2.5,-15.36,3.5],[1,25]])
south0 = STRUCT([south01,south02,south03])

south1 = GRID([[2.5],[-50,-10.82,4.18],[-1,-25,-1,24]])

south2 = GRID([[2.5],[-50,15],[-1,-25,-1,-24,-1,24]])

south3 = GRID([[2.5],[65],[-1,-25,-1,-24,-1,-24,-1,7.14]])

south = STRUCT([south0,south1,south2,south3])

#West

west01 = GRID([[-2.5,25],[-62.5,2.5],[1,25]])
west02 = GRID([[-2.5,-25,46.78],[-62.5,2.5],[-1,25]])
west03 = GRID([[-2.5,-25,-46.78,5.71],[-62.5,2.5],[-1,17.14,-5.71,2.15]])
west04 = GRID([[-74.28,-5.71,18.51],[-62.5,2.5],[-1,25]])
west0 = STRUCT([west01,west02,west03,west04])

west11 = GRID([[63.57],[-62.5,2.5],[-1,-25,-1,24]])
west12 = GRID([[-63.57,25.71],[-62.5,2.5],[-1,-25,-1,12]])
west13 = GRID([[-63.57,-25.71,23.22],[-62.5,2.5],[-1,-25,-1,24]])
west1 = STRUCT([west11,west12,west13])

west21 = GRID([[89.28],[-62.5,2.5],[-1,-25,-1,-24,-1,24]])
west22 = GRID([[-89.28,1.25],[-62.5,2.5],[-1,-25,-1,-24,-1,6,-12,6]])
west23 = GRID([[-89.28,-1.25,5.71],[-62.5,2.5],[-1,-25,-1,-24,-1,24]])
west24 = GRID([[-89.28,-1.25,-5.71,1.25],[-62.5,2.5],[-1,-25,-1,-24,-1,6,-12,6]])
west25 = GRID([[-89.28,-1.25,-5.71,-1.25,15.01],[-62.5,2.5],[-1,-25,-1,-24,-1,24]])
west2 = STRUCT([west21,west22,west23,west24,west25])

west3 = GRID([[112.5],[-62.5,2.5],[-1,-25,-1,-24,-1,-24,-1,23]])

west = STRUCT([west0,west1,west2,west3])

VIEW(STRUCT([building,floor0,floor1,floor2,floor3,floor4,south,west,east,north]))



#Esercizio 4

#Struttura lato est
structureEastFirst = COLOR(BLACK)(GRID([[-57.5, 25], [-1.5,0.5], [-37, 0.5, -9, 0.5, -4]]))
structureEastSecond = COLOR(BLACK)(GRID([[-57.5, 0.5, -11.5, 1 , -11.5 , 0.5], [-1.5,0.5], [-37, 10, -4]]))

#Finestre lato est
windowEastFirst = STRUCT ([structureEastFirst,structureEastSecond])
windowEastSecond = T([3])([25])(windowEastFirst)
windowEastThird = T([3])([22.14])(windowEastSecond)


structureEastThird = COLOR(BLACK)(GRID([[-56, 26.5], [-23.5, 0.5], [-15 ,0.5, -9 , 0.5]]))
structureEastFourth = COLOR(BLACK)(GRID([[-56, 0.5, -12.25 , 1 , -12.25 , 0.5], [-23.5, 0.5], [-15 ,10]]))

windowEastFourth= STRUCT ([structureEastThird,structureEastFourth])
windowEast = STRUCT([windowEastFirst,windowEastSecond,windowEastThird,windowEastFourth])


#Struttura lato nord
structureNorthFirst = COLOR(BLACK)(GRID([[-110.5, 0.5],[-2.5, 47.5],[-37, 0.5, -9 , 0.5]]))
structureNorthSecond = COLOR(BLACK)(GRID([[-110.5, 0.5],[-2.5, 0.6, -11.125, 0.6, -11.125 , 0.6, -11.125 , 0.6, -11.125 , 0.6],[-37, 10, -4]]))

#Finestre lato nord
windowNorthFirst = STRUCT([structureNorthFirst,structureNorthSecond])
windowNorthSecond = T([3])([22])(windowNorthFirst)
windowNorthThird = T([3])([23])(windowNorthSecond)


windowNorth = STRUCT([windowNorthFirst,windowNorthSecond,windowNorthThird])


#Struttura lato sud
structureSouthFirst = COLOR(BLACK)(GRID([[-1.5,0.5],[-2.5,0.5,-10.875,1,-10.875,1,-10.875,1,-10.875,0.5],[-27,24]]))
structureSouthSecond = COLOR(BLACK)(GRID([[-1.5,0.5],[-2.5,47.5],[-27,0.5,-11,1,-11,0.5]]))
windowSouthFirst = STRUCT ([structureSouthFirst,structureSouthSecond])


#Finestre lato sud
windowSouthSecond = T([3])([25])(windowSouthFirst)
structureSouthThird = COLOR(BLACK)(GRID([[-15.25,0.5],[-21.3, 0.5, -13.35, 1, -13.35, 0.5],[-15.28,9.47]]))
structureSouthFourth = COLOR(BLACK)(GRID([[-15.25,0.5],[-21.3, 28.7],[-15.28,0.5,-8.47,0.5]]))

windowSouth3 = STRUCT ([structureSouthThird,structureSouthFourth])
windowSouth = STRUCT([windowSouthFirst,windowSouthSecond,windowSouth3])

building = STRUCT([buildingBase,pillars0,pillars1,pillars2,pillars3,floor0,floor1,floor2,floor3,floor4,north,east,south,west,windowNorth,windowEast,windowSouth])

VIEW(STRUCT([building,floor0,floor1,floor2,floor3,floor4,south,west,east,north,windowSouth,windowNorth,windowEast]))
